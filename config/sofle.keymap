/*
 * Copyright (c) 2020 The ZMK Contributors
 *
 * SPDX-License-Identifier: MIT
 */

#include <behaviors.dtsi>
#include <dt-bindings/zmk/bt.h>
#include <dt-bindings/zmk/ext_power.h>
#include <dt-bindings/zmk/keys.h>
#include <dt-bindings/zmk/outputs.h>
#include <dt-bindings/zmk/pointing.h>

/ {
    behaviors {
        better_cap_word: better_cap_word {
            compatible = "zmk,behavior-caps-word";
            label = "BETTER_CAP_WORD";
            #binding-cells = <0>;
            continue-list = <A B C D E F G H I J K L M N O P Q R S T U V W X Y Z KP_MINUS MINUS BACKSPACE DELETE LEFT_ARROW RIGHT_ARROW UP_ARROW DOWN_ARROW C_VOLUME_UP C_VOLUME_DOWN C_MUTE C_PREVIOUS C_NEXT C_PLAY_PAUSE>;
            mods = <(MOD_LSFT)>;
        };

        sticky_mod: sticky_mod {
            compatible = "zmk,behavior-sticky-key";
            label = "STICKY_MOD";
            bindings = <&kp>;
            #binding-cells = <1>;
            quick-release;
            release-after-ms = <1000>;
        };

        stickier_layer: stickier_layer {
            compatible = "zmk,behavior-sticky-key";
            label = "STICKIER_LAYER";
            bindings = <&mo>;
            #binding-cells = <1>;
            release-after-ms = <3000>;
            quick-release;
        };

        out_tg_or_usb: out_tg_or_usb {
            compatible = "zmk,behavior-mod-morph";
            label = "OUT_TG_OR_USB";
            bindings = <&out OUT_TOG>, <&out OUT_USB>;

            #binding-cells = <0>;
            mods = <(MOD_RSFT|MOD_LSFT)>;
        };

        bt_0_sel_or_unsel: bt_0_sel_or_unsel {
            compatible = "zmk,behavior-mod-morph";
            label = "BT_0_SEL_OR_UNSEL";
            bindings = <&bt BT_SEL 0>, <&shift_clear_bt0>;

            #binding-cells = <0>;
            mods = <(MOD_RSFT|MOD_LSFT)>;
        };

        bt_1_sel_or_unsel: bt_1_sel_or_unsel {
            compatible = "zmk,behavior-mod-morph";
            label = "BT_1_SEL_OR_UNSEL";
            bindings = <&bt BT_SEL 1>, <&shift_clear_bt1>;

            #binding-cells = <0>;
            mods = <(MOD_RSFT|MOD_LSFT)>;
        };

        bt_2_sel_or_unsel: bt_2_sel_or_unsel {
            compatible = "zmk,behavior-mod-morph";
            label = "BT_2_SEL_OR_UNSEL";
            bindings = <&bt BT_SEL 2>, <&shift_clear_bt2>;

            #binding-cells = <0>;
            mods = <(MOD_RSFT|MOD_LSFT)>;
        };

        bt_3_sel_or_unsel: bt_3_sel_or_unsel {
            compatible = "zmk,behavior-mod-morph";
            label = "BT_3_SEL_OR_UNSEL";
            bindings = <&bt BT_SEL 3>, <&shift_clear_bt3>;

            #binding-cells = <0>;
            mods = <(MOD_RSFT|MOD_LSFT)>;
        };

        bt_4_sel_or_unsel: bt_4_sel_or_unsel {
            compatible = "zmk,behavior-mod-morph";
            label = "BT_4_SEL_OR_UNSEL";
            bindings = <&bt BT_SEL 4>, <&shift_clear_bt4>;

            #binding-cells = <0>;
            mods = <(MOD_RSFT|MOD_LSFT)>;
        };

        auto_shift_num_row: auto_shift_num_row {
            compatible = "zmk,behavior-hold-tap";
            label = "AUTO_SHIFT_NUM_ROW";
            bindings = <&kp>, <&kp>;

            #binding-cells = <2>;
            flavor = "tap-preferred";
            tapping-term-ms = <500>;
            require-prior-idle-ms = <150>;
            quick-tap-ms = <100>;
        };

        home_row_mods_lh: home_row_mods_lh {
            compatible = "zmk,behavior-hold-tap";
            label = "HOME_ROW_MODS_LH";
            bindings = <&kp>, <&kp>;

            #binding-cells = <2>;
            tapping-term-ms = <275>;
            quick-tap-ms = <100>;
            flavor = "balanced";
            hold-trigger-key-positions = <6 18 43 55 44 30 7 19 45 31 57 59 46 58 47 32 20 8 9 21 33 48 34 22 10 11 23 49 35 56>;
            require-prior-idle-ms = <200>;
        };

        home_row_mods_rh: home_row_mods_rh {
            compatible = "zmk,behavior-hold-tap";
            label = "HOME_ROW_MODS_RH";
            bindings = <&kp>, <&kp>;

            #binding-cells = <2>;
            tapping-term-ms = <275>;
            quick-tap-ms = <100>;
            flavor = "balanced";
            hold-trigger-key-positions = <0 12 24 36 37 25 13 1 2 14 26 50 38 39 27 15 3 4 5 17 16 28 29 42 41 40 51 52 54 53>;
            require-prior-idle-ms = <200>;
        };

        thumb_cluster_lh: thumb_cluster_lh {
            compatible = "zmk,behavior-hold-tap";
            label = "THUMB_CLUSTER_LH";
            bindings = <&mo>, <&kp>;

            #binding-cells = <2>;
            tapping-term-ms = <275>;
            quick-tap-ms = <100>;
            flavor = "balanced";
            hold-trigger-key-positions = <55 43 56 44 30 18 6 7 19 31 57 45 58 46 32 20 8 9 21 33 47 59 48 34 22 10 11 23 35 49>;
        };

        thumb_cluster_rh: thumb_cluster_rh {
            compatible = "zmk,behavior-hold-tap";
            label = "THUMB_CLUSTER_RH";
            bindings = <&mo>, <&kp>;

            #binding-cells = <2>;
            tapping-term-ms = <275>;
            quick-tap-ms = <100>;
            flavor = "balanced";
            hold-trigger-key-positions = <36 54 0 12 24 37 25 13 1 3 2 14 26 38 50 51 39 27 15 28 16 4 40 52 53 41 29 17 5 42 49 35 23 59 58>;
        };

        thumb_cluster_nav: thumb_cluster_nav {
            compatible = "zmk,behavior-hold-tap";
            label = "THUMB_CLUSTER_NAV";
            bindings = <&mo>, <&kp>;

            #binding-cells = <2>;
            tapping-term-ms = <275>;
            quick-tap-ms = <100>;
            flavor = "balanced";
            hold-trigger-key-positions = <55 43 56 44 30 18 6 7 19 31 57 45 58 46 32 20 8 9 21 33 47 59 48 34 22 10 11 23 35 49 29 28 27 26 25>;
        };

        thumb_cluster_num: thumb_cluster_num {
            compatible = "zmk,behavior-hold-tap";
            label = "THUMB_CLUSTER_NUM";
            bindings = <&mo>, <&kp>;

            #binding-cells = <2>;
            tapping-term-ms = <275>;
            quick-tap-ms = <100>;
            flavor = "balanced";
            hold-trigger-key-positions = <36 54 0 12 24 37 25 13 1 3 2 14 26 38 50 51 39 27 15 28 16 4 40 52 53 41 29 17 5 42 18 18 19 20 21 32 30 31 33 34 22 44 45 46 47 48 49 35 23 59 58>;
        };

        home_row_mods_lh_shift: home_row_mods_lh_shift {
            compatible = "zmk,behavior-hold-tap";
            label = "HOME_ROW_MODS_LH_SHIFT";
            bindings = <&kp>, <&kp>;

            #binding-cells = <2>;
            tapping-term-ms = <275>;
            quick-tap-ms = <100>;
            flavor = "balanced";
            hold-trigger-key-positions = <6 18 43 55 44 30 7 19 45 31 57 59 46 58 47 32 20 8 9 21 33 48 34 22 10 11 23 49 35 56>;
        };

        home_row_mods_rh_shift: home_row_mods_rh_shift {
            compatible = "zmk,behavior-hold-tap";
            label = "HOME_ROW_MODS_RH_SHIFT";
            bindings = <&kp>, <&kp>;

            #binding-cells = <2>;
            tapping-term-ms = <275>;
            quick-tap-ms = <100>;
            flavor = "balanced";
            hold-trigger-key-positions = <0 12 24 36 37 25 13 1 2 14 26 50 38 39 27 15 3 4 5 17 16 28 29 42 41 40 51 52 54 53>;
        };

        tap_dance_l_shift_capwords: tap_dance_l_shift_capwords {
            compatible = "zmk,behavior-tap-dance";
            label = "TAP_DANCE_L_SHIFT_CAPWORDS";
            #binding-cells = <0>;
            bindings =
                <&kp LEFT_SHIFT>,
                <&sticky_mod LEFT_SHIFT>,
                <&better_cap_word>;
        };

        tap_dance_sticky_l_ctrl: tap_dance_sticky_l_ctrl {
            compatible = "zmk,behavior-tap-dance";
            label = "TAP_DANCE_STICKY_L_CTRL";
            #binding-cells = <0>;
            bindings = <&kp LEFT_CONTROL>, <&sticky_mod LEFT_CONTROL>;
        };

        tap_dance_sticky_l_alt: tap_dance_sticky_l_alt {
            compatible = "zmk,behavior-tap-dance";
            label = "TAP_DANCE_STICKY_L_ALT";
            #binding-cells = <0>;
            bindings = <&kp LEFT_ALT>, <&sticky_mod LEFT_ALT>;
        };

        layer_num_switch_tap_dance: layer_num_switch_tap_dance {
            compatible = "zmk,behavior-tap-dance";
            label = "LAYER_NUM_SWITCH_TAP_DANCE";
            #binding-cells = <0>;
            bindings = <&mo 0>, <&stickier_layer 0>, <&tog 0>;
        };

        layer_nav_switch_tap_dance: layer_nav_switch_tap_dance {
            compatible = "zmk,behavior-tap-dance";
            label = "LAYER_NAV_SWITCH_TAP_DANCE";
            #binding-cells = <0>;
            bindings = <&mo 0>, <&stickier_layer 0>, <&tog 0>;
        };

        auto_shift_bottom_right: auto_shift_bottom_right {
            compatible = "zmk,behavior-hold-tap";
            label = "AUTO_SHIFT_BOTTOM_RIGHT";
            bindings = <&kp>, <&kp>;

            #binding-cells = <2>;
            flavor = "tap-preferred";
            tapping-term-ms = <500>;
            require-prior-idle-ms = <150>;
            quick-tap-ms = <100>;
        };

        layer_sel_lh: layer_sel_lh {
            compatible = "zmk,behavior-tap-dance";
            label = "LAYER_SEL_LH";
            #binding-cells = <0>;
            bindings = <&mo 0>, <&mo 0>, <&mo 0>, <&tog 0>;
        };

        left_thumb_gui: left_thumb_gui {
            compatible = "zmk,behavior-tap-dance";
            label = "LEFT_THUMB_GUI";
            #binding-cells = <0>;
            bindings = <&mo 0>, <&kp LEFT_GUI>;
        };

        num_layer_dot: num_layer_dot {
            compatible = "zmk,behavior-mod-morph";
            label = "NUM_LAYER_DOT";
            bindings = <&kp DOT>, <&kp LEFT_PARENTHESIS>;

            #binding-cells = <0>;
            mods = <(MOD_LSFT|MOD_RSFT)>;
            keep-mods = <(MOD_LSFT|MOD_RSFT)>;
        };

        media_or_config_layer: media_or_config_layer {
            compatible = "zmk,behavior-tap-dance";
            label = "MEDIA_OR_CONFIG_LAYER";
            #binding-cells = <0>;
            bindings = <&mo 0>, <&mo 4>;
        };

        mac_like_backspace: mac_like_backspace {
            compatible = "zmk,behavior-mod-morph";
            label = "MAC_LIKE_BACKSPACE";
            bindings = <&kp BACKSPACE>, <&kp DELETE>;

            #binding-cells = <0>;
            mods = <(MOD_LSFT|MOD_RSFT)>;
        };

        thumb_th: thumb_th {
            compatible = "zmk,behavior-hold-tap";
            label = "THUMB_TH";
            bindings = <&mo>, <&kp>;

            #binding-cells = <2>;
            tapping-term-ms = <275>;
        };

        numpad_switch: numpad_switch {
            compatible = "zmk,behavior-tap-dance";
            label = "NUMPAD_SWITCH";
            #binding-cells = <0>;
            bindings = <&kp KP_NUMLOCK>, <&none>, <&stickier_layer 4>;
        };

        osl_or_hold_layer: osl_or_hold_layer {
            compatible = "zmk,behavior-hold-tap";
            label = "OSL_OR_HOLD_LAYER";
            bindings = <&mo>, <&stickier_layer>;

            #binding-cells = <2>;
            tapping-term-ms = <275>;
        };
    };

    combos {
        compatible = "zmk,combos";

        single_hand_unlock {
            bindings = <&tog 5>;
            key-positions = <54 28 26>;
            layers = <5>;
            require-prior-idle-ms = <5000>;
            slow-release;
            timeout-ms = <1000>;
        };
    };

    macros {
        shift_clear_bt0: shift_clear_bt0 {
            compatible = "zmk,behavior-macro";
            #binding-cells = <0>;
            bindings = <&bt BT_SEL 0 &bt BT_CLR>;
            label = "SHIFT_CLEAR_BT0";
        };

        shift_clear_bt1: shift_clear_bt1 {
            compatible = "zmk,behavior-macro";
            #binding-cells = <0>;
            bindings = <&bt BT_SEL 1 &bt BT_CLR>;
            label = "SHIFT_CLEAR_BT1";
        };

        shift_clear_bt2: shift_clear_bt2 {
            compatible = "zmk,behavior-macro";
            #binding-cells = <0>;
            bindings = <&bt BT_SEL 2 &bt BT_CLR>;
            label = "SHIFT_CLEAR_BT2";
        };

        shift_clear_bt3: shift_clear_bt3 {
            compatible = "zmk,behavior-macro";
            #binding-cells = <0>;
            bindings = <&bt BT_SEL 3 &bt BT_CLR>;
            label = "SHIFT_CLEAR_BT3";
        };

        shift_clear_bt4: shift_clear_bt4 {
            compatible = "zmk,behavior-macro";
            #binding-cells = <0>;
            bindings = <&bt BT_SEL 4 &bt BT_CLR>;
            label = "SHIFT_CLEAR_BT4";
        };

        edit_hotkey: edit_hotkey {
            compatible = "zmk,behavior-macro-two-param";
            #binding-cells = <2>;
            bindings =
                <&macro_press>,
                <&macro_param_1to1 &kp MACRO_PLACEHOLDER>,
                <&macro_tap>,
                <&macro_param_2to1 &kp MACRO_PLACEHOLDER>,
                <&macro_release>,
                <&macro_param_1to1 &kp MACRO_PLACEHOLDER>;

            label = "EDIT_HOTKEY";
        };

        mods_combo_2_keys: mods_combo_2_keys {
            compatible = "zmk,behavior-macro-two-param";
            #binding-cells = <2>;
            bindings =
                <&macro_press>,
                <&macro_param_1to1 &kp MACRO_PLACEHOLDER &macro_param_2to1 &kp MACRO_PLACEHOLDER>,
                <&macro_pause_for_release>,
                <&macro_release>,
                <&macro_param_2to1 &kp MACRO_PLACEHOLDER &macro_param_1to1 &kp MACRO_PLACEHOLDER>;

            label = "MODS_COMBO_2_KEYS";
        };
    };

    keymap {
        compatible = "zmk,keymap";

        base {
            bindings = <
&kp GRAVE       &kp NUMBER_1  &kp NUMBER_2  &kp NUMBER_3  &kp NUMBER_4      &kp NUMBER_5                                  &kp NUMBER_6  &kp NUMBER_7       &kp NUMBER_8   &kp NUMBER_9  &kp NUMBER_0   &mo 4
&kp ESCAPE      &kp Q         &kp W         &kp E         &kp R             &kp T                                         &kp Y         &kp U              &kp I          &kp O         &kp P          &kp BACKSPACE
&kp TAB         &kp A         &kp S         &kp D         &kp F             &kp G                                         &kp H         &kp J              &kp K          &kp L         &kp SEMICOLON  &kp SQT
&kp LEFT_SHIFT  &kp Z         &kp X         &kp C         &kp V             &kp B         &kp C_MUTE    &kp C_PLAY_PAUSE  &kp N         &kp M              &kp COMMA      &kp PERIOD    &kp SLASH      &kp RIGHT_SHIFT
                              &kp LCTRL     &kp LEFT_ALT  &kp LEFT_COMMAND  &mo 2         &kp ENTER     &kp SPACE         &mo 3         &kp RIGHT_COMMAND  &kp RIGHT_ALT  &kp RCTRL
            >;

            display-name = "BASE";
            sensor-bindings =
                <&inc_dec_kp C_VOLUME_DOWN C_VOLUME_UP>,
                <&inc_dec_kp PAGE_UP PAGE_DOWN>;
        };

        alt {
            bindings = <
&trans  &trans  &trans  &trans            &trans        &trans                    &trans  &trans         &trans             &trans  &trans  &trans
&trans  &trans  &trans  &trans            &trans        &trans                    &trans  &trans         &trans             &trans  &trans  &trans
&trans  &trans  &trans  &trans            &trans        &trans                    &trans  &trans         &trans             &trans  &trans  &trans
&trans  &trans  &trans  &trans            &trans        &trans  &trans    &trans  &trans  &trans         &trans             &trans  &trans  &tap_dance_sticky_l_alt
                &trans  &kp LEFT_COMMAND  &kp LEFT_ALT  &trans  &trans    &trans  &trans  &kp RIGHT_ALT  &kp RIGHT_COMMAND  &trans
            >;

            display-name = "ALT";
        };

        lower {
            bindings = <
&none      &kp F1        &kp F2        &kp F3    &kp F4          &kp F5                             &kp F6            &kp F7             &kp F8         &kp F9                &kp F10                &kp F11
&kp GRAVE  &kp NUMBER_1  &kp NUMBER_2  &kp N3    &kp N4          &kp N5                             &kp N6            &kp N7             &kp N8         &kp N9                &kp N0                 &kp F12
&kp TAB    &kp EXCL      &kp AT        &kp HASH  &kp DOLLAR      &kp PERCENT                        &kp CARET         &kp AMPS           &kp ASTRK      &kp LEFT_PARENTHESIS  &kp RIGHT_PARENTHESIS  &kp PIPE
&kp LSHFT  &kp EQUAL     &kp MINUS     &kp PLUS  &kp LEFT_BRACE  &kp RIGHT_BRACE  &trans    &trans  &kp LEFT_BRACKET  &kp RIGHT_BRACKET  &kp SEMICOLON  &kp COLON             &kp BSLH               &kp RIGHT_SHIFT
                         &trans        &trans    &trans          &trans           &trans    &trans  &trans            &trans             &trans         &trans
            >;

            display-name = "LOWER";
        };

        raise {
            bindings = <
&trans      &trans        &trans           &trans             &trans     &trans                          &trans         &trans          &trans    &trans           &trans             &trans
&kp ESCAPE  &kp INS       &kp PRINTSCREEN  &kp K_APPLICATION  &none      &none                           &kp PAGE_UP    &kp LC(LEFT)    &kp UP    &kp LC(RIGHT)    &kp LC(BACKSPACE)  &kp BACKSPACE
&trans      &kp LEFT_ALT  &kp LCTRL        &kp LEFT_SHIFT     &none      &kp CAPSLOCK                    &kp PAGE_DOWN  &kp DOWN_ARROW  &kp DOWN  &kp RIGHT_ARROW  &kp K_APPLICATION  &kp BACKSPACE
&trans      &kp LG(Z)     &kp LG(X)        &kp LG(C)          &kp LG(V)  &none         &trans    &trans  &none          &kp LC(HOME)    &none     &kp LC(END)      &trans             &trans
                          &trans           &trans             &trans     &trans        &trans    &trans  &trans         &trans          &trans    &trans
            >;

            display-name = "RAISE";
        };

        config {
            bindings = <
&trans  &trans              &trans              &trans              &trans              &trans                                &trans  &trans  &trans  &trans  &trans  &trans
&trans  &bt_0_sel_or_unsel  &bt_1_sel_or_unsel  &bt_2_sel_or_unsel  &bt_3_sel_or_unsel  &bt_4_sel_or_unsel                    &trans  &trans  &trans  &trans  &trans  &trans
&trans  &ext_power EP_TOG   &trans              &trans              &bt BT_CLR          &out_tg_or_usb                        &trans  &trans  &trans  &trans  &trans  &trans
&trans  &tog 1              &trans              &trans              &trans              &tog 0              &trans    &trans  &trans  &trans  &trans  &trans  &trans  &trans
                            &trans              &trans              &tog 5              &trans              &trans    &trans  &trans  &trans  &trans  &trans
            >;

            display-name = "CONFIG";
        };

        lock {
            bindings = <
&none  &none  &none  &none  &none  &none                  &none  &none  &none  &none  &none  &none
&none  &none  &none  &none  &none  &none                  &none  &none  &none  &none  &none  &none
&none  &none  &none  &none  &none  &none                  &none  &none  &none  &none  &none  &none
&none  &none  &none  &none  &none  &none  &none    &none  &none  &none  &none  &none  &none  &none
              &none  &none  &none  &none  &none    &none  &none  &none  &none  &none
            >;

            display-name = "LOCKED";
            sensor-bindings = <&inc_dec_kp 0 0>, <&inc_dec_kp 0 0>;
        };
    };

    conditional_layers { compatible = "zmk,conditional-layers"; };
};
